// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    project.ext.load = { path ->
        Reader reader = new File(project.rootDir.getPath(), path).newReader()
        def config = new Properties()
        config.load(reader)
        reader.close()

        return config
    }

    def ps = load('local.properties')

    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url uri(ps['maven.url'])
            credentials {
                username = ps['maven.userName']
                password = ps['maven.userPass']
            }
        }

        maven {
            url uri(ps['maven.snaUrl'])
            credentials {
                username = ps['maven.userName']
                password = ps['maven.userPass']
            }
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

project.ext.load = { path ->
    Reader reader = new File(project.rootDir.getPath(), path).newReader()
    def config = new Properties()
    config.load(reader)
    reader.close()

    return config
}

def local = load('local.properties')

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url uri(local['maven.url'])
            credentials {
                username = local['maven.userName']
                password = local['maven.userPass']
            }
        }

        maven {
            url uri(local['maven.snaUrl'])
            credentials {
                username = local['maven.userName']
                password = local['maven.userPass']
            }
        }
    }

    it.apply plugin: "org.sonarqube"

    ext {
        mavenUrl = local['maven.url']
        snapshotUrl = local['maven.snaUrl']

        mavenName = local['maven.userName']
        mavenPass = local['maven.userPass']
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
